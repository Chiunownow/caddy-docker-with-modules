name: Check Caddy Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 0:00 运行一次

jobs:
  check_new_release:
    runs-on: ubuntu-latest
    steps:
      - name: Cache latest release tag
        id: cache_latest_tag
        uses: actions/cache@v3
        with:
          path: .latest_release_tag
          key: latest-release-tag

      - name: Check latest release of caddyserver/caddy
        id: check_release
        run: |
          # 获取最新的 Release Tag
          LATEST_TAG=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name)
          echo "Latest release tag from GitHub: $LATEST_TAG"

          # 如果存在缓存文件则读取
          if [ -f .latest_release_tag ]; then
            LAST_TAG=$(cat .latest_release_tag)
          else
            LAST_TAG=""
          fi

          echo "Last cached release tag: $LAST_TAG"

          # 使用 Environment Files 替代 set-output
          echo "last_tag=$LAST_TAG" >> $GITHUB_ENV
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV

          # 更新缓存文件
          echo "$LATEST_TAG" > .latest_release_tag

      - name: Trigger docker_build_and_publish action on new release
        if: ${{ env.latest_tag != env.last_tag }}
        run: |
          # 调用 GitHub API 触发 docker_build_and_publish 工作流
          curl -X POST -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/docker_build_and_publish.yml/dispatches \
            -d "{\"ref\":\"${GITHUB_REF}\",\"inputs\":{\"caddy_release_tag\":\"${{ env.latest_tag }}\"}}"

      - name: Update cache
        if: ${{ env.latest_tag != env.last_tag }}
        uses: actions/upload-artifact@v3
        with:
          name: latest-release-tag
          path: .latest_release_tag